{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsConteiner.jsx","components/Profile/ProfileInfo/StatusProfile.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","className","css","item","src","this","props","message","likesCount","React","Component","maxLength10","maxWords","MyPosts","memo","listPosts","postsData","map","index","key","fieldEntry","ReduxPostField","onSubmit","post","addPost","postMessage","reduxForm","form","handleSubmit","createNewForm","Textarea","stateField","MyPostsContenier","connect","state","profilePage","newPostText","dispatch","addPostProfile","StatusProfile","editMode","text","status","setState","editStatus","e","target","value","prefProps","prevState","onClick","changeEditMode","bind","onChange","editTextStatus","onBlur","autoFocus","ProfileInfo","myProfile","profile","photos","large","aboutMe","lookingForAJobDescription","userId","avatar","Profile","MyPostsConteiner","ProfileContainer","match","params","idUser","history","push","getProfile","getStatus","compose","auth","withRouter"],"mappings":"mHACAA,EAAOC,QAAU,CAAC,KAAO,sBAAsB,WAAa,8B,oBCA5DD,EAAOC,QAAU,CAAC,KAAO,qB,oBCAzBD,EAAOC,QAAU,CAAC,OAAS,8B,6ICgBZC,E,iLAXP,OACI,yBAAKC,UAAWC,IAAIC,MAChB,yBAAKC,IAAI,wEACJC,KAAKC,MAAMC,QAChB,6BACI,sCAAkBF,KAAKC,MAAME,iB,GAP9BC,IAAMC,W,yBCKrBC,EAAcC,YAAS,IAErBC,EAAUJ,IAAMK,MAAM,SAAAR,GACxB,IAGIS,EAAYT,EAAMU,UAAUC,KAAI,SAACd,EAAMe,GACvC,OAAO,kBAAC,EAAD,CAAMC,IAAKD,EAAOX,QAASJ,EAAKI,QAASC,WAAYL,EAAKK,gBAErE,OACI,yBAAKP,UAAWC,IAAIC,MAApB,WAEI,yBAAKF,UAAWC,IAAIkB,YAChB,kBAACC,EAAD,CAAgBC,SAVX,SAACC,GACdjB,EAAMkB,QAAQD,EAAKE,iBAWdV,MAcTM,EAAiBK,YAAU,CAACC,KAAK,aAAhBD,EAPL,SAACpB,GAEb,OAAO,0BAAMgB,SAAUhB,EAAMsB,cACxBC,YAAc,cAAeC,IAAU,sBAAuB,CAACC,IAAYpB,IAC5E,6BAAK,iDAIEE,I,QCrBAmB,EADUC,aAbD,SAACC,GACrB,MAAO,CACHlB,UAAWkB,EAAMC,YAAYnB,UAC7BoB,YAAaF,EAAMC,YAAYC,gBAGZ,SAACC,GACxB,MAAO,CACHb,QAAS,SAACD,GACNc,EAASC,YAAef,QAIXU,CAA6CpB,G,kBCkBvD0B,E,YAhCX,WAAYjC,GAAQ,IAAD,8BACf,4CAAMA,KACD4B,MAAQ,CACTM,UAAU,EACVC,KAAM,EAAKnC,MAAMoC,QAJN,E,8EAQfrC,KAAKsC,SAAS,CAAEH,UAAWnC,KAAK6B,MAAMM,WACjCnC,KAAK6B,MAAMM,UACZnC,KAAKC,MAAMsC,WAAWvC,KAAK6B,MAAMO,Q,qCAG1BI,GACXxC,KAAKsC,SAAS,CAAEF,KAAMI,EAAEC,OAAOC,U,yCAEhBC,EAAWC,GACxBD,EAAUN,SAAWrC,KAAKC,MAAMoC,QAC/BrC,KAAKsC,SAAS,CAACF,KAAKpC,KAAKC,MAAMoC,W,+BAIlC,OAAO,6BAECrC,KAAK6B,MAAMM,SACL,0BAAMU,QAAS7C,KAAK8C,eAAeC,KAAK/C,OAASA,KAAKC,MAAMoC,OAA4BrC,KAAKC,MAAMoC,OAA9B,mFACrE,2BAAOW,SAAUhD,KAAKiD,eAAeF,KAAK/C,MAAOkD,OAAQlD,KAAK8C,eAAeC,KAAK/C,MAAOmD,WAAW,EAAMT,MAAO1C,KAAK6B,MAAMO,Y,GA3BtHhC,IAAMC,WCyBnB+C,E,iLApBP,IAAIC,EAAY,6BACX,yBAAKtD,IAAI,wDACV,6FAWJ,OATOC,KAAKC,MAAMqD,UACVD,EAAY,6BACR,yBAAKtD,IAAKC,KAAKC,MAAMqD,QAAQC,OAAOC,QACpC,kBAAE,EAAF,CAAgBnB,OAAQrC,KAAKC,MAAMoC,OAAQE,WAAYvC,KAAKC,MAAMsC,aAClE,yDAAWvC,KAAKC,MAAMqD,QAAQG,SAC9B,yGAAmBzD,KAAKC,MAAMqD,QAAQI,2BACtC,kCAAQ1D,KAAKC,MAAMqD,QAAQK,UAInC,yBAAK/D,UAAWC,IAAI+D,QACfP,O,GAjBSjD,IAAMC,WCYjBwD,E,YAZX,WAAY5D,GAAQ,qEACVA,I,sEAGN,OACI,6BACI,kBAAC,EAAD,CAAaqD,QAAStD,KAAKC,MAAMqD,QAASjB,OAAQrC,KAAKC,MAAMoC,OAAQE,WAAYvC,KAAKC,MAAMsC,aAC5F,kBAACuB,EAAD,W,GARM1D,IAAMC,W,wBCMtB0D,E,YACF,WAAY9D,GAAO,qEACTA,I,iFAGN,IAAI0D,EAAS3D,KAAKC,MAAM+D,MAAMC,OAAON,OAChCA,IACDA,EAAS3D,KAAKC,MAAMiE,SAEhBlE,KAAKC,MAAMkE,QAAQC,KAAK,eAGhCpE,KAAKC,MAAMoE,WAAWV,GACtB3D,KAAKC,MAAMqE,UAAUX,K,+BAKrB,OAAO,kBAAC,EAAD,iBAAa3D,KAAKC,MAAlB,CAAyBqD,QAAStD,KAAKC,MAAMqD,e,GAlB7BlD,IAAMC,WA+BtBkE,sBACX3C,aAToB,SAACC,GACrB,MAAO,CACHyB,QAASzB,EAAMC,YAAYwB,QAC3BjB,OAAOR,EAAMC,YAAYO,OACzB6B,OAAOrC,EAAM2C,KAAKb,UAKG,CAAEU,eAAYC,cAAW/B,iBAClDkC,IAFWF,CAIbR","file":"static/js/3.1adf028e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__5U9FE\",\"fieldEntry\":\"MyPosts_fieldEntry__3oNTG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1BWqp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileInfo_avatar__22AH9\"};","import React, { Component } from \"react\"\r\nimport css from \"./Post.module.css\"\r\n\r\n\r\nclass Post extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={css.item}>\r\n                <img src=\"http://gloria-mur.ru/wp-content/uploads/2017/05/avatar1-740x463.jpg\" />\r\n                    {this.props.message}\r\n                <div>\r\n                    <span>like</span>{this.props.likesCount}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Post;\r\n","import React, { PureComponent } from \"react\";\r\nimport css from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { stateField, maxWords } from \"../../../util/varibals/validators\";\r\nimport { Textarea, Input, createNewForm } from \"../../Common/FormsControl/FormsControl\";\r\n\r\n\r\n\r\nlet maxLength10 = maxWords(10)\r\n\r\nconst MyPosts = React.memo( props => {\r\n    const onSubmit = (post) => {\r\n        props.addPost(post.postMessage)\r\n    }\r\n    let listPosts = props.postsData.map((item, index)=>{\r\n        return <Post key={index} message={item.message} likesCount={item.likesCount} />\r\n    })\r\n    return (\r\n        <div className={css.item}>\r\n            My posts\r\n            <div className={css.fieldEntry}>\r\n                <ReduxPostField onSubmit={onSubmit}/>\r\n            </div>\r\n            {listPosts}\r\n        </div>\r\n    )\r\n} )\r\n\r\n\r\n\r\nlet PostField = (props) => {\r\n    \r\n    return <form onSubmit={props.handleSubmit}>\r\n        {createNewForm(\"postMessage\", Textarea, \"Enter your new post\", [stateField, maxLength10])}\r\n        <div><button>App post</button></div>\r\n    </form>\r\n}\r\nlet ReduxPostField = reduxForm({form:\"postField\"})(PostField)\r\nexport default MyPosts;","import { updateNewPostTextProfile, addPostProfile} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        addPost: (post)=>{\r\n            dispatch(addPostProfile(post))\r\n        }\r\n    }\r\n}\r\nconst MyPostsContenier = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\nexport default MyPostsContenier;","import React, { Component } from \"react\"\r\n\r\nclass StatusProfile extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            editMode: true,\r\n            text: this.props.status\r\n        }\r\n    }\r\n    changeEditMode() {\r\n        this.setState({ editMode: !this.state.editMode })\r\n        if (!this.state.editMode) {\r\n            this.props.editStatus(this.state.text)\r\n        }\r\n    }\r\n    editTextStatus(e) {\r\n        this.setState({ text: e.target.value })\r\n    }\r\n    componentDidUpdate(prefProps, prevState) {\r\n       if(prefProps.status !== this.props.status){\r\n           this.setState({text:this.props.status})\r\n       }\r\n    }\r\n    render() {\r\n        return <div>\r\n            {\r\n                this.state.editMode\r\n                    ? <span onClick={this.changeEditMode.bind(this)}>{!this.props.status ? \"Введите статус\" : this.props.status}</span>\r\n                    : <input onChange={this.editTextStatus.bind(this)} onBlur={this.changeEditMode.bind(this)} autoFocus={true} value={this.state.text} />\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default StatusProfile","import React, { Component } from \"react\"\r\nimport css from './ProfileInfo.module.css'\r\nimport StatusProfile from \"./StatusProfile\"\r\n\r\n\r\nclass ProfileInfo extends React.Component{\r\n    render(){\r\n        let myProfile = <div>\r\n             <img src=\"https://pics.livejournal.com/shpilenok/pic/001p0qdt\" />\r\n            <p>Бещук Павел</p>\r\n        </div>  \r\n            if(this.props.profile){\r\n                myProfile = <div>\r\n                    <img src={this.props.profile.photos.large} />\r\n                    < StatusProfile status={this.props.status} editStatus={this.props.editStatus}/>\r\n                    <p>Кто я: {this.props.profile.aboutMe}</p>\r\n                    <p>Статус работы: {this.props.profile.lookingForAJobDescription}</p>\r\n                    <p>Id: {this.props.profile.userId}</p>\r\n                </div>\r\n            }\r\n        return (\r\n            <div className={css.avatar}>\r\n                {myProfile}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ProfileInfo; ","import React, { Component } from 'react';\r\nimport MyPostsConteiner from \"./MyPosts/MyPostsConteiner\"\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ProfileInfo profile={this.props.profile} status={this.props.status} editStatus={this.props.editStatus}/>\r\n                <MyPostsConteiner />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Profile","import React, { Component } from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getProfile, getStatus, editStatus } from \"./../../redux/profileReducer\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.idUser\r\n            if(!userId){\r\n                this.props.history.push(\"/find-users\")\r\n            }\r\n        }\r\n        this.props.getProfile(userId)\r\n        this.props.getStatus(userId)\r\n   \r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} profile={this.props.profile} />\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status:state.profilePage.status,\r\n        idUser:state.auth.userId\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getProfile, getStatus, editStatus }),\r\n    withRouter,\r\n    //withAuthRedirect\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}