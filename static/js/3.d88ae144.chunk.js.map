{"version":3,"sources":["image/profilePhoto.jpg","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsConteiner.jsx","components/Profile/ProfileInfo/ProfileInfoEditerForm.jsx","components/Profile/ProfileInfo/StatusProfile.jsx","components/Profile/ProfileInfo/ProfileMyInfo.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","className","css","item","src","this","props","message","likesCount","React","Component","maxLength10","maxWords","MyPosts","memo","listPosts","postsData","map","index","key","fieldEntry","ReduxPostField","onSubmit","post","addPost","postMessage","reduxForm","form","handleSubmit","createNewForm","Textarea","stateField","MyPostsContenier","connect","state","profilePage","newPostText","dispatch","addPostProfile","ProfileInfoEditerForm","profile","photos","large","profilePhoto","error","type","Input","Object","keys","contacts","elem","StatusProfile","editMode","text","status","setState","editStatus","e","target","value","prefProps","prevState","onClick","changeEditMode","bind","onChange","editTextStatus","onBlur","autoFocus","ProfileMyInfo","setEditStatus","bossProfile","addNewPhotoForProfile","userId","aboutMe","lookingForAJobDescription","fullName","ProfileInfo","formData","setNewProfileInfo","event","files","length","saveNewPhoto","setEditingMode","myProfile","editingMode","initialValues","ProfileMyContacts","title","avatar","Profile","MyPostsConteiner","ProfileContainer","match","params","idUser","history","push","getProfile","getStatus","updateProfile","prevProps","snapshot","compose","auth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.d88ae144.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profilePhoto.69e24b7d.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__5U9FE\",\"fieldEntry\":\"MyPosts_fieldEntry__3oNTG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1BWqp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileInfo_avatar__22AH9\"};","import React, { Component } from \"react\"\r\nimport css from \"./Post.module.css\"\r\n\r\n\r\nclass Post extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={css.item}>\r\n                <img src=\"http://gloria-mur.ru/wp-content/uploads/2017/05/avatar1-740x463.jpg\" />\r\n                    {this.props.message}\r\n                <div>\r\n                    <span>like</span>{this.props.likesCount}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Post;\r\n","import React, { PureComponent } from \"react\";\r\nimport css from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { stateField, maxWords } from \"../../../util/varibals/validators\";\r\nimport { Textarea, Input, createNewForm } from \"../../Common/FormsControl/FormsControl\";\r\n\r\n\r\n\r\nlet maxLength10 = maxWords(10)\r\n\r\nconst MyPosts = React.memo( props => {\r\n    const onSubmit = (post) => {\r\n        props.addPost(post.postMessage)\r\n    }\r\n    let listPosts = props.postsData.map((item, index)=>{\r\n        return <Post key={index} message={item.message} likesCount={item.likesCount} />\r\n    })\r\n    return (\r\n        <div className={css.item}>\r\n            My posts\r\n            <div className={css.fieldEntry}>\r\n                <ReduxPostField onSubmit={onSubmit}/>\r\n            </div>\r\n            {listPosts}\r\n        </div>\r\n    )\r\n} )\r\n\r\n\r\n\r\nlet PostField = (props) => {\r\n    \r\n    return <form onSubmit={props.handleSubmit}>\r\n        {createNewForm(\"postMessage\", Textarea, \"Enter your new post\", [stateField, maxLength10])}\r\n        <div><button>App post</button></div>\r\n    </form>\r\n}\r\nlet ReduxPostField = reduxForm({form:\"postField\"})(PostField)\r\nexport default MyPosts;","import { updateNewPostTextProfile, addPostProfile} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        addPost: (post)=>{\r\n            dispatch(addPostProfile(post))\r\n        }\r\n    }\r\n}\r\nconst MyPostsContenier = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\nexport default MyPostsContenier;","import React from \"react\"\r\nimport { createNewForm, Textarea, Input  } from \"./../../Common/FormsControl/FormsControl\"\r\nimport { reduxForm } from 'redux-form'\r\nimport profilePhoto from \"./../../../image/profilePhoto.jpg\"\r\n\r\nconst ProfileInfoEditer = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n       <img src={props.profile.photos.large || profilePhoto} />\r\n       <div><button>save</button></div>\r\n       { !!props.error && <div>{props.error}</div>}\r\n       <div>Про себя:\r\n            {createNewForm (\"aboutMe\", Textarea ,\"Про себя\")}\r\n        </div>\r\n        <div>Ищу работу:\r\n            {createNewForm (\"lookingForAJob\", \"input\",null, null, {type:\"checkbox\"})}\r\n        </div>\r\n        <div>Какую работу я ищу:\r\n            {createNewForm (\"lookingForAJobDescription\", Textarea, \"Какую работу я ищу\")}\r\n        </div>\r\n        <div>Мое имя: {createNewForm (\"fullName\", Input, \"Мое имя\")}</div>        \r\n        <div>\r\n            <b>Контакты</b>\r\n            {Object.keys(props.profile.contacts).map((elem, key)=>{\r\n                return <div key={key}>\r\n                    {createNewForm (`contacts.${elem}`, Input, elem)}\r\n                </div>\r\n            })}\r\n        </div>\r\n        \r\n    </form>\r\n}\r\n\r\nconst ProfileInfoEditerForm = reduxForm ({\r\n    form:\"ProfileInfoEditerForm\"\r\n})(ProfileInfoEditer)\r\n\r\nexport default ProfileInfoEditerForm\r\n","import React, { Component } from \"react\"\r\n\r\nclass StatusProfile extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            editMode: true,\r\n            text: this.props.status\r\n        }\r\n    }\r\n    changeEditMode() {\r\n        this.setState({ editMode: !this.state.editMode })\r\n        if (!this.state.editMode) {\r\n            this.props.editStatus(this.state.text)\r\n        }\r\n    }\r\n    editTextStatus(e) {\r\n        this.setState({ text: e.target.value })\r\n    }\r\n    componentDidUpdate(prefProps, prevState) {\r\n       if(prefProps.status !== this.props.status){\r\n           this.setState({text:this.props.status})\r\n       }\r\n    }\r\n    render() {\r\n        return <div>\r\n            {\r\n                this.state.editMode\r\n                    ? <span onClick={this.changeEditMode.bind(this)}>{!this.props.status ? \"Введите статус\" : this.props.status}</span>\r\n                    : <input onChange={this.editTextStatus.bind(this)} onBlur={this.changeEditMode.bind(this)} autoFocus={true} value={this.state.text} />\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default StatusProfile","import React from \"react\"\r\nimport StatusProfile from \"./StatusProfile\"\r\nimport profilePhoto from \"./../../../image/profilePhoto.jpg\"\r\n\r\n\r\nconst ProfileMyInfo = (props) => {\r\n    return <>\r\n        <img src={props.profile.photos.large || profilePhoto} />\r\n        <div><button onClick={props.setEditStatus}>Edit</button></div>\r\n        {props.bossProfile && <input type=\"file\" onChange = {props.addNewPhotoForProfile}/>}\r\n        < StatusProfile status={props.status} editStatus={props.editStatus} {...props}/>\r\n        <div>Мой Id: {props.profile.userId}</div>\r\n        <div>Про себя:\r\n            {props.profile.aboutMe}\r\n        </div>\r\n        <div>Ищу работу: {props.profile.lookingForAJobDescription ? \"нет\" : \"да\"}</div>\r\n        <div>Какую работу я ищу: {props.profile.lookingForAJobDescription}</div>\r\n        <div>Мое имя: {props.profile.fullName}</div>\r\n    </>\r\n}\r\n\r\nexport default ProfileMyInfo; ","import React, { Component } from \"react\"\r\nimport css from './ProfileInfo.module.css'\r\nimport ProfileInfoEditerForm from \"./ProfileInfoEditerForm\"\r\nimport ProfileMyInfo from \"./ProfileMyInfo\"\r\n\r\nclass ProfileInfo extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            editStatus:false\r\n        }\r\n    }\r\n    \r\n    onSubmit(formData){\r\n        this.props.setNewProfileInfo(formData)\r\n    }\r\n\r\n    addNewPhotoForProfile(event){\r\n        if(event.target.files.length){\r\n            this.props.saveNewPhoto(event.target.files[0])\r\n        }\r\n    }\r\n    setEditStatus(){\r\n        this.setState({editStatus:!this.state.editStatus})\r\n        this.props.setEditingMode(true)\r\n    }\r\n    render(){\r\n        let myProfile = <div>\r\n            <img src=\"https://pics.livejournal.com/shpilenok/pic/001p0qdt\" />\r\n            <p>Бещук Павел</p>\r\n        </div>  \r\n            if(this.props.profile){\r\n                myProfile = <div>\r\n                    {this.props.editingMode ? <ProfileInfoEditerForm initialValues={this.props.profile} onSubmit={this.onSubmit.bind(this)} profile={this.props.profile} setEditStatus={this.setEditStatus.bind(this)}/>: \r\n                    <>\r\n                        < ProfileMyInfo \r\n                            profile={this.props.profile} \r\n                            status={this.props.status} \r\n                            editStatus={this.props.editStatus} \r\n                            bossProfile={this.props.bossProfile}\r\n                            setEditStatus={this.setEditStatus.bind(this)}\r\n                            addNewPhotoForProfile={this.addNewPhotoForProfile.bind(this)}\r\n                        />\r\n                        <div>\r\n                            <b>Контакты</b>\r\n                            {Object.keys(this.props.profile.contacts).map((elem, key)=>{\r\n                                return <div key={key}>\r\n                                    <ProfileMyContacts title={elem} contacts={this.props.profile.contacts[elem]}/>\r\n                                </div>\r\n                            })}\r\n                        </div>\r\n                    </>\r\n                    }\r\n                </div>\r\n            }\r\n        return (\r\n            <div className={css.avatar}>\r\n                {myProfile}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst ProfileMyContacts = (props) =>{\r\n    let contacts = !props.contacts ? \"\" : props.contacts\r\n    return `${props.title} : ${contacts}`\r\n}\r\n\r\nexport default ProfileInfo; ","import React, { Component } from 'react';\r\nimport MyPostsConteiner from \"./MyPosts/MyPostsConteiner\"\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nclass Profile extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ProfileInfo \r\n                    profile={this.props.profile} \r\n                    status={this.props.status} \r\n                    editStatus={this.props.editStatus} \r\n                    setNewProfileInfo={this.props.setNewProfileInfo}\r\n                    bossProfile={this.props.bossProfile}\r\n                    saveNewPhoto={this.props.saveNewPhoto}\r\n                    setEditingMode={this.props.setEditingMode}\r\n                    editingMode={this.props.editingMode}\r\n                />\r\n                <MyPostsConteiner />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Profile","import React, { Component } from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getProfile, getStatus, editStatus, setNewProfileInfo, saveNewPhoto, setEditingMode } from \"./../../redux/profileReducer\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    updateProfile(){\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.idUser\r\n            if(!userId){\r\n                this.props.history.push(\"/find-users\")\r\n            }\r\n        }\r\n        this.props.getProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n     \r\n    componentDidMount() {\r\n        this.updateProfile()\r\n   \r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot){\r\n        if(this.props.match.params.userId != prevProps.match.params.userId){\r\n            this.updateProfile()\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return <Profile \r\n            {...this.props} \r\n            profile={this.props.profile}\r\n            bossProfile={!this.props.match.params.userId}  \r\n            saveNewPhoto={this.props.saveNewPhoto}\r\n            setEditingMode={this.props.setEditingMode}\r\n        />\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        editingMode: state.profilePage.editingMode,\r\n        status:state.profilePage.status,\r\n        idUser:state.auth.userId\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getProfile, getStatus, editStatus, setNewProfileInfo, saveNewPhoto, setEditingMode }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}